spring:
  autoconfigure:
#     exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  profiles:
#   Using command line arugument, profiles can be overridn and activated any profiles
#   --spring.profiles.active=development,production
    active: production
    default: development
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  cloud:
    config:
      import-check:
        enabled: false
  mysql:
    datasource:
      url: 'jdbc:mysql://localhost:3306/student'
      username: root
      password: password
      driverClassName: com.mysql.jdbc.Driver
  postgres:
    datasource:
      url: 'jdbc:postgresql://localhost:5432/student'
      username: postgres
      password: password
      driverClassName: org.postgresql.Driver
    
  # For script based initialization, this should be set to true
  sql:
    init:
      mode: always

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    showSql: true

    #    Scripts get executed before Hibernate is initialized
    defer-datasource-initialization: true
  hibernate:
    ddl-auto: create

server:
  port: 9292
  error:
    inlcude-message: always
    
management:
  endpoints:
    web:
      exposure:
        include: health,refresh,beans,info

app:        
  my:
    greeting: CONFIG SERVER APP
    list:
      values: One, Two, Three, Four, Five
  message: 'HELLO CLIENT'
  rabbitmq:
    - host: localhost
    - port: 5673
    - username: sm
    - password: sm
  dbValues:
    connection: connection-string-here
    host: 127.0.0.1
    port: 1200




